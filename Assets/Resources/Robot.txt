if (!global_check("moves"))
{
    let visited = set_create();
    solve(c(), r(), "", visited);
}

let moves = global_get("moves");

for i = 0 to string_len(moves) - 1
{
    let move = string_char(moves, i);
    if (move == "U") move_up();
        else if (move == "D") move_down();
        else if (move == "L") move_left();
        else if (move == "R") move_right();
}

bool is_valid(int x, int y, int visited)
{
    if (x < 0 || x >= LEVEL_WIDTH || y < 0 || y >= LEVEL_HEIGHT)
        return false;

    if (get_tile(x, y) == "Wall" || set_in(visited, x + "-" + y))
        return false;
 
    return true;
}
 
void solve(int x, int y, string moves, int visited)
{
    if global_check("moves") return;

    if x == EXIT_C && y == EXIT_R
        global_set("moves", moves);  
    
    set_add(visited, x + "-" + y);
 
    if is_valid(x, y + 1, visited)
        solve(x, y + 1, moves + "U", visited);

    if is_valid(x, y - 1, visited)
        solve(x, y - 1, moves + "D", visited);

    if is_valid(x - 1, y, visited)
        solve(x - 1, y, moves + "L", visited);

    if is_valid(x + 1, y, visited)
        solve(x + 1, y, moves + "R", visited);
 
    set_remove(visited, x + "-" + y);
}